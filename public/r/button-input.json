{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-input",
  "type": "registry:ui",
  "title": "Input Button",
  "description": "An input field that displays an icon with an accompanying animation.",
  "author": "Ansh Singh Sonkhia",
  "dependencies": [
    "react",
    "motion",
    "lucide-react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:ui",
      "content": "'use client';\r\n \r\nimport * as React from 'react';\r\nimport {\r\n  AnimatePresence,\r\n  HTMLMotionProps,\r\n  motion,\r\n  Transition,\r\n} from 'motion/react';\r\nimport { ArrowRight } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\n \r\ntype InputButtonContextType = {\r\n  showInput: boolean;\r\n  setShowInput: React.Dispatch<React.SetStateAction<boolean>>;\r\n  transition: Transition;\r\n  id: string;\r\n};\r\nconst InputButtonContext = React.createContext<\r\n  InputButtonContextType | undefined\r\n>(undefined);\r\n \r\nconst useInputButton = (): InputButtonContextType => {\r\n  const context = React.useContext(InputButtonContext);\r\n  if (!context) {\r\n    throw new Error('useInputButton must be used within a InputButton');\r\n  }\r\n  return context;\r\n};\r\n \r\ntype InputButtonProviderProps = React.ComponentProps<'div'> &\r\n  Partial<InputButtonContextType>;\r\n \r\nfunction InputButtonProvider({\r\n  className,\r\n  transition = { type: 'spring', stiffness: 300, damping: 20 },\r\n  showInput,\r\n  setShowInput,\r\n  id,\r\n  ...props\r\n}: InputButtonProviderProps) {\r\n  const localId = React.useId();\r\n  const [localShowInput, setLocalShowInput] = React.useState(false);\r\n \r\n  return (\r\n    <InputButtonContext.Provider\r\n      value={{\r\n        showInput: showInput ?? localShowInput,\r\n        setShowInput: setShowInput ?? setLocalShowInput,\r\n        transition,\r\n        id: id ?? localId,\r\n      }}\r\n    >\r\n      <div\r\n        data-slot=\"input-button-provider\"\r\n        className={cn(\r\n          'relative w-fit flex items-center justify-center h-10',\r\n          (showInput || localShowInput) && 'w-full max-w-[400px]',\r\n          className,\r\n        )}\r\n        {...props}\r\n      />\r\n    </InputButtonContext.Provider>\r\n  );\r\n}\r\n \r\ntype InputButtonProps = HTMLMotionProps<'div'>;\r\n \r\nfunction InputButton({ className, ...props }: InputButtonProps) {\r\n  return (\r\n    <motion.div\r\n      data-slot=\"input-button\"\r\n      className={cn('flex size-full', className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n \r\ntype InputButtonActionProps = HTMLMotionProps<'button'>;\r\n \r\nfunction InputButtonAction({ className, ...props }: InputButtonActionProps) {\r\n  const { transition, setShowInput, id } = useInputButton();\r\n \r\n  return (\r\n    <motion.button\r\n      data-slot=\"input-button-action\"\r\n      className={cn(\r\n        'bg-background text-sm whitespace-nowrap disabled:pointer-events-none disabled:opacity-50 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive rounded-full border text-background-foreground cursor-pointer pl-4 pr-12 size-full font-medium',\r\n        className,\r\n      )}\r\n      layoutId={`input-button-action-${id}`}\r\n      transition={transition}\r\n      onClick={() => setShowInput((prev) => !prev)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n \r\ntype InputButtonSubmitProps = HTMLMotionProps<'button'> & {\r\n  icon?: React.ComponentType<React.SVGProps<SVGSVGElement> & { className?: string }>;\r\n};\r\n \r\nfunction InputButtonSubmit({\r\n  className,\r\n  children,\r\n  icon: Icon = ArrowRight,\r\n  ...props\r\n}: InputButtonSubmitProps) {\r\n  const { transition, showInput, setShowInput, id } = useInputButton();\r\n \r\n  return (\r\n    <motion.button\r\n      data-slot=\"input-button-submit\"\r\n      layoutId={`input-button-submit-${id}`}\r\n      transition={transition}\r\n      className={cn(\r\n        \"z-[1] [&_svg:not([class*='size-'])]:size-4 cursor-pointer disabled:pointer-events-none  disabled:opacity-50 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive whitespace-nowrap bg-primary hover:bg-primary/90 transition-colors text-primary-foreground rounded-full text-sm flex items-center justify-center font-medium absolute inset-y-1 right-1\",\r\n        showInput ? 'px-4' : 'aspect-square',\r\n        className,\r\n      )}\r\n      onClick={() => setShowInput((prev) => !prev)}\r\n      {...props}\r\n    >\r\n      {showInput ? (\r\n        <motion.span\r\n          key=\"show-button\"\r\n          initial={{ opacity: 0, scale: 0 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          transition={{ duration: 0.2 }}\r\n        >\r\n          {children}\r\n        </motion.span>\r\n      ) : (\r\n        <motion.span\r\n          key=\"show-icon\"\r\n          initial={{ opacity: 0, scale: 0 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          transition={{ duration: 0.2 }}\r\n        >\r\n          <Icon className=\"size-4\" />\r\n        </motion.span>\r\n      )}\r\n    </motion.button>\r\n  );\r\n}\r\n \r\ntype InputButtonInputProps = React.ComponentProps<'input'>;\r\n \r\nfunction InputButtonInput({ className, ...props }: InputButtonInputProps) {\r\n  const { transition, showInput, id } = useInputButton();\r\n \r\n  return (\r\n    <AnimatePresence>\r\n      {showInput && (\r\n        <div className=\"absolute inset-0 size-full flex items-center justify-center\">\r\n          <motion.div\r\n            layoutId={`input-button-input-${id}`}\r\n            className=\"size-full flex items-center bg-background rounded-full relative\"\r\n            transition={transition}\r\n          >\r\n            <input\r\n              data-slot=\"input-button-input\"\r\n              className={cn(\r\n                'size-full selection:bg-primary selection:text-primary-foreground placeholder:text-muted-foreground inset-0 pl-4 pr-32 py-2 text-sm bg-background rounded-full absolute shrink-0 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive disabled:pointer-events-none disabled:cursor-not-allowed',\r\n                className,\r\n              )}\r\n              {...props}\r\n            />\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n}\r\n \r\nexport {\r\n  InputButton,\r\n  InputButtonProvider,\r\n  InputButtonAction,\r\n  InputButtonSubmit,\r\n  InputButtonInput,\r\n  useInputButton,\r\n  type InputButtonProps,\r\n  type InputButtonProviderProps,\r\n  type InputButtonActionProps,\r\n  type InputButtonSubmitProps,\r\n  type InputButtonInputProps,\r\n};",
      "path": "components/pumki-ui/buttons/input.tsx",
      "target": "components/pumki-ui/buttons/input.tsx"
    }
  ]
}