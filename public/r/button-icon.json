{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-icon",
  "type": "registry:ui",
  "title": "Icon Button",
  "description": "A button that displays an icon with an accompanying animation.",
  "author": "Ansh Singh Sonkhia",
  "dependencies": [
    "react",
    "motion"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:ui",
      "content": "'use client';\r\n \r\nimport * as React from 'react';\r\nimport {\r\n  motion,\r\n  AnimatePresence,\r\n  type HTMLMotionProps,\r\n  type Transition,\r\n} from 'motion/react';\r\n \r\nimport { cn } from '@/lib/utils';\r\n \r\nconst sizes = {\r\n  default: 'size-8 [&_svg]:size-5',\r\n  sm: 'size-6 [&_svg]:size-4',\r\n  md: 'size-10 [&_svg]:size-6',\r\n  lg: 'size-12 [&_svg]:size-7',\r\n};\r\n \r\ntype IconButtonProps = Omit<HTMLMotionProps<'button'>, 'color'> & {\r\n  icon: React.ComponentType<{ className?: string }>;\r\n  active?: boolean;\r\n  className?: string;\r\n  animate?: boolean;\r\n  size?: keyof typeof sizes;\r\n  color?: [number, number, number];\r\n  transition?: Transition;\r\n};\r\n \r\nfunction IconButton({\r\n  icon: Icon,\r\n  className,\r\n  active = false,\r\n  animate = true,\r\n  size = 'default',\r\n  color = [59, 130, 246],\r\n  transition = { type: 'spring', stiffness: 300, damping: 15 },\r\n  ...props\r\n}: IconButtonProps) {\r\n  return (\r\n    <motion.button\r\n      data-slot=\"icon-button\"\r\n      className={cn(\r\n        `group/icon-button cursor-pointer relative inline-flex size-10 shrink-0 rounded-full hover:bg-[var(--icon-button-color)]/10 active:bg-[var(--icon-button-color)]/20 text-[var(--icon-button-color)]`,\r\n        sizes[size],\r\n        className,\r\n      )}\r\n      whileHover={{ scale: 1.05 }}\r\n      whileTap={{ scale: 0.95 }}\r\n      style={\r\n        {\r\n          '--icon-button-color': `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\r\n        } as React.CSSProperties\r\n      }\r\n      {...props}\r\n    >\r\n      <motion.div\r\n        className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 stroke-muted-foreground group-hover/icon-button:stroke-[var(--icon-button-color)]\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <Icon\r\n          className={\r\n            active ? 'fill-[var(--icon-button-color)]' : 'fill-transparent'\r\n          }\r\n        />\r\n      </motion.div>\r\n \r\n      <AnimatePresence mode=\"wait\">\r\n        {active && (\r\n          <motion.div\r\n            className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-[var(--icon-button-color)] fill-[var(--icon-button-color)]\"\r\n            aria-hidden=\"true\"\r\n            initial={{ opacity: 0, scale: 0 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0 }}\r\n            transition={transition}\r\n          >\r\n            <Icon className=\"w-full h-full\" />\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n \r\n      <AnimatePresence>\r\n        {animate && active && (\r\n          <>\r\n            <motion.div\r\n              className=\"absolute inset-0 z-10 rounded-full \"\r\n              style={{\r\n                background: `radial-gradient(circle, rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.4) 0%, rgba(${color[0]}, ${color[1]}, ${color[2]}, 0) 70%)`,\r\n              }}\r\n              initial={{ scale: 1.2, opacity: 0 }}\r\n              animate={{ scale: [1.2, 1.8, 1.2], opacity: [0, 0.3, 0] }}\r\n              transition={{ duration: 1.2, ease: 'easeInOut' }}\r\n            />\r\n            <motion.div\r\n              className=\"absolute inset-0 z-10 rounded-full\"\r\n              style={{\r\n                boxShadow: `0 0 10px 2px rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.6)`,\r\n              }}\r\n              initial={{ scale: 1, opacity: 0 }}\r\n              animate={{ scale: [1, 1.5], opacity: [0.8, 0] }}\r\n              transition={{ duration: 0.8, ease: 'easeOut' }}\r\n            />\r\n            {[...Array(6)].map((_, i) => (\r\n              <motion.div\r\n                key={i}\r\n                className=\"absolute w-1 h-1 rounded-full bg-[var(--icon-button-color)]\"\r\n                initial={{ x: '50%', y: '50%', scale: 0, opacity: 0 }}\r\n                animate={{\r\n                  x: `calc(50% + ${Math.cos((i * Math.PI) / 3) * 30}px)`,\r\n                  y: `calc(50% + ${Math.sin((i * Math.PI) / 3) * 30}px)`,\r\n                  scale: [0, 1, 0],\r\n                  opacity: [0, 1, 0],\r\n                }}\r\n                transition={{ duration: 0.8, delay: i * 0.05, ease: 'easeOut' }}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n      </AnimatePresence>\r\n    </motion.button>\r\n  );\r\n}\r\n \r\nexport { IconButton, sizes, type IconButtonProps };",
      "path": "components/pumki-ui/buttons/icon.tsx",
      "target": "components/pumki-ui/buttons/icon.tsx"
    }
  ]
}