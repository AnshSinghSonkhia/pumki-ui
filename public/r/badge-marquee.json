{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "badge-marquee",
  "type": "registry:ui",
  "title": "Badge Marquee",
  "description": "A component for displaying a scrolling marquee of badges.",
  "author": "Ansh Singh Sonkhia",
  "dependencies": [
    "react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\";\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\n\r\nfunction Dot({ dotColor = \"#52644D\" }: { dotColor?: string }) {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 5 6\"\r\n            style={{ margin: \"0 12px\" }}\r\n            width={12}\r\n            height={12}\r\n        >\r\n            <circle cx=\"2.25\" cy=\"3\" r=\"2.25\" fill={dotColor} />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport interface BadgeMarqueProps {\r\n    speed?: number; // px per frame\r\n    background?: string;\r\n    color?: string;\r\n    padding?: string;\r\n    items: string[];\r\n    size?: number | string; // New prop for whole badge size\r\n    dotColor?: string; // dot color prop\r\n}\r\n\r\nexport const BadgeMarquee: React.FC<BadgeMarqueProps> = (props) => {\r\n    const {\r\n        speed = 1.2,\r\n        background = \"linear-gradient(rgb(82, 100, 77) -43.73%, rgba(82, 100, 77, 0) 129.91%)\",\r\n        color = \"rgb(134, 156, 128)\",\r\n        padding = \"8px 0\",\r\n        items,\r\n        size,\r\n        dotColor = \"#52644D\", // default dot color\r\n    } = props;\r\n    const marqueeRef = useRef<HTMLDivElement>(null);\r\n    const [contentWidth, setContentWidth] = useState(0);\r\n\r\n    const safeItems = Array.isArray(items) ? items : [];\r\n    const scrollItems = [...safeItems, ...safeItems];\r\n\r\n    useEffect(() => {\r\n        if (marqueeRef.current) {\r\n            const firstSet = marqueeRef.current.querySelectorAll('.badge-marque-item');\r\n            let width = 0;\r\n            firstSet.forEach((el) => {\r\n                width += (el as HTMLElement).offsetWidth;\r\n            });\r\n            setContentWidth(width);\r\n        }\r\n    }, [items]);\r\n\r\n    const duration = contentWidth > 0 ? Math.max(5, contentWidth / (speed * 10)) : 10;\r\n    return (\r\n        <div\r\n            style={{\r\n                background,\r\n                color,\r\n                overflow: \"hidden\",\r\n                width: size ? size : \"100%\",\r\n                position: \"relative\",\r\n                padding,\r\n            }}\r\n        >\r\n            <style>{`\r\n                @keyframes badge-marque-scroll {\r\n                    0% { transform: translateX(0); }\r\n                    100% { transform: translateX(-${contentWidth}px); }\r\n                }\r\n            `}</style>\r\n            <div\r\n                ref={marqueeRef}\r\n                style={{\r\n                    display: \"flex\",\r\n                    whiteSpace: \"nowrap\",\r\n                    willChange: \"transform\",\r\n                    minWidth: contentWidth ? `${contentWidth * 2}px` : undefined,\r\n                    animation: contentWidth ? `badge-marque-scroll ${duration}s linear infinite` : undefined,\r\n                }}\r\n            >\r\n                {scrollItems.map((label, i) => (\r\n                    <span\r\n                        key={i}\r\n                        className=\"badge-marque-item\"\r\n                        style={{\r\n                            display: \"inline-flex\",\r\n                            alignItems: \"center\",\r\n                            fontWeight: 500,\r\n                            fontSize: \"1rem\",\r\n                            letterSpacing: \"0.02em\",\r\n                            marginRight: 4,\r\n                        }}\r\n                    >\r\n                        <span>{label}</span>\r\n                        <Dot dotColor={dotColor} />\r\n                    </span>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};",
      "path": "components/pumki-ui/badges/badge-marquee.tsx",
      "target": "components/pumki-ui/badges/badge-marquee.tsx"
    }
  ]
}