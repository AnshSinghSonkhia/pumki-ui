{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "bg-ocean",
  "type": "registry:ui",
  "title": "Background Ocean",
  "description": "A background component depicting an ocean scene.",
  "author": "Ansh Singh Sonkhia",
  "dependencies": [
    "react",
    "framer-motion"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\";\r\n\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport { motion, useAnimation, steps } from \"framer-motion\";\r\n\r\nconst BIRD_IMG = \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/721952/bird.png\";\r\nconst FOG_IMG = \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/721952/fog3.png\";\r\nconst WATER_IMG = \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/721952/waterDaytime.jpg\";\r\n\r\nconst NUM_WAVES = 30;\r\nconst BIRDS = [\r\n\t{ scale: 0.7, top: 200 },\r\n\t{ scale: 0.65, top: 140 },\r\n\t{ scale: 0.6, top: 170 },\r\n];\r\n\r\nexport const BgOcean: React.FC = () => {\r\n\tconst containerRef = useRef<HTMLDivElement>(null);\r\n\tconst controls = useAnimation();\r\n\r\n\t// Mouse movement for compass and parallax\r\n\tuseEffect(() => {\r\n\t\tconst handleMouseMove = (e: MouseEvent) => {\r\n\t\t\tconst x = e.clientX / window.innerWidth;\r\n\t\t\tcontrols.start({ x: -1200 * x });\r\n\t\t};\r\n\t\twindow.addEventListener(\"mousemove\", handleMouseMove);\r\n\t\treturn () => window.removeEventListener(\"mousemove\", handleMouseMove);\r\n\t}, [controls]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={containerRef}\r\n\t\t\tstyle={{\r\n\t\t\t\tposition: \"relative\",\r\n\t\t\t\twidth: \"200vw\",\r\n\t\t\t\theight: \"100vh\",\r\n\t\t\t\tminWidth: 3200,\r\n\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\tbackground:\r\n\t\t\t\t\t\"linear-gradient(180deg, #aeefff 0%, #6ed7ff 40%, #b3e0ff 70%, #e0f7fa 100%)\",\r\n\t\t\t\topacity: 1,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{/* Sky clouds overlay */}\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tpointerEvents: \"none\",\r\n\t\t\t\t\tzIndex: 1,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{/* Simple clouds using SVG ellipses for a soft effect */}\r\n\t\t\t\t<svg\r\n\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\tviewBox=\"0 0 1920 1080\"\r\n\t\t\t\t\tstyle={{ position: \"absolute\", top: 0, left: 0 }}\r\n\t\t\t\t\tclassName=\"blur-3xl\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<ellipse cx=\"400\" cy=\"120\" rx=\"180\" ry=\"60\" fill=\"#fff\" opacity=\"0.35\" />\r\n\t\t\t\t\t<ellipse cx=\"600\" cy=\"180\" rx=\"120\" ry=\"40\" fill=\"#fff\" opacity=\"0.25\" />\r\n\t\t\t\t\t<ellipse cx=\"1200\" cy=\"100\" rx=\"200\" ry=\"70\" fill=\"#fff\" opacity=\"0.32\" />\r\n\t\t\t\t\t<ellipse cx=\"1500\" cy=\"200\" rx=\"140\" ry=\"50\" fill=\"#fff\" opacity=\"0.28\" />\r\n\t\t\t\t\t<ellipse cx=\"900\" cy=\"220\" rx=\"100\" ry=\"35\" fill=\"#fff\" opacity=\"0.22\" />\r\n\t\t\t\t</svg>\r\n\t\t\t\t{/* Fog overlay using the fog image */}\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t\tbackgroundImage: `url(${FOG_IMG})`,\r\n\t\t\t\t\t\tbackgroundRepeat: \"repeat-x\",\r\n\t\t\t\t\t\tbackgroundSize: \"cover\",\r\n\t\t\t\t\t\topacity: 0.35,\r\n\t\t\t\t\t\tpointerEvents: \"none\",\r\n\t\t\t\t\t\tzIndex: 2,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{/* Water waves */}\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\twidth: \"110%\",\r\n\t\t\t\t\theight: 300,\r\n\t\t\t\t\tleft: \"-20%\",\r\n\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\ttransform: \"translateY(80px)\", // Push ocean a bit below\r\n\t\t\t\t\tperspective: 500,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{[...Array(NUM_WAVES)].map((_, i) => (\r\n\t\t\t\t\t<motion.div\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tinitial={{\r\n\t\t\t\t\t\t\ty: i * 6.5,\r\n\t\t\t\t\t\t\tbackgroundPositionY: -i * 5,\r\n\t\t\t\t\t\t\tscaleX: 1,\r\n\t\t\t\t\t\t\tscaleY: 1,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\ty: [i * 6.5, i * 6.5 - 2 * (i / NUM_WAVES * 60), i * 6.5],\r\n\t\t\t\t\t\t\tx: [0, -100 * (i / NUM_WAVES * 2), 0],\r\n\t\t\t\t\t\t\tscaleX: [1, 0.95 + i / NUM_WAVES * 0.2, 1],\r\n\t\t\t\t\t\t\tscaleY: [1, 2 - i / NUM_WAVES, 1],\r\n\t\t\t\t\t\t\trotate: [0, 0.01, 0],\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttransition={{\r\n\t\t\t\t\t\t\tduration: 4,\r\n\t\t\t\t\t\t\trepeat: Infinity,\r\n\t\t\t\t\t\t\trepeatType: \"reverse\",\r\n\t\t\t\t\t\t\tease: \"easeInOut\",\r\n\t\t\t\t\t\t\tdelay: i / NUM_WAVES,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\theight: 50,\r\n\t\t\t\t\t\t\tbackgroundImage: `url(${WATER_IMG})`,\r\n\t\t\t\t\t\t\tbackgroundRepeat: \"repeat-x\",\r\n\t\t\t\t\t\t\tbackgroundPosition: `0px -${i * 5}px`,\r\n\t\t\t\t\t\t\topacity: 0.7,\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\tborderRadius: 10,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t{/* Compass */}\r\n\t\t\t</div>\r\n            /* Birds */\r\n            {/* {BIRDS.map((bird, idx) => (\r\n                <motion.div\r\n                    key={idx}\r\n                    initial={{\r\n                        left: -60,\r\n                        top: bird.top,\r\n                        scale: bird.scale,\r\n                        backgroundPositionY: -840, // Start at top of sprite sheet\r\n                    }}\r\n                    animate={{\r\n                        left: [0, 3200],\r\n                        backgroundPositionY: [\r\n                            -840, // Start at top\r\n                            -780, -720, -660, -600, -540, -480, -420, -360, -300, -240, -180, -120, -60, 0, // Step through sprite frames\r\n                            -840 // Loop back\r\n                        ],\r\n                    }}\r\n                    transition={{\r\n                        left: {\r\n                            duration: 20,\r\n                            repeat: Infinity,\r\n                            ease: \"linear\",\r\n                            delay: idx * 0.4,\r\n                        },\r\n\t\t\t\t\t\tbackgroundPositionY: {\r\n\t\t\t\t\t\t\tduration: 10, // Slowed down from 0.65s to 1.5s per flap cycle\r\n\t\t\t\t\t\t\trepeat: Infinity,\r\n\t\t\t\t\t\t\tease: steps(14),\r\n\t\t\t\t\t\t\tdelay: idx * 0.2,\r\n\t\t\t\t\t\t},\r\n                    }}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        width: 60,\r\n                        height: 60,\r\n                        backgroundImage: `url(${BIRD_IMG})`,\r\n                        backgroundRepeat: \"no-repeat\",\r\n                        backgroundSize: \"cover\",\r\n                        zIndex: 9999,\r\n                    }}\r\n                />\r\n            ))} */}\r\n            <motion.div\r\n                style={{ position: \"absolute\", left: 30, bottom: 110, zIndex: 3 }} // <-- Pull compass up a bit (was 70)\r\n                animate={controls}\r\n            >\r\n                <svg\r\n                    width=\"100\"\r\n                    height=\"100\"\r\n                    viewBox=\"0 0 50 50\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <circle opacity=\"0.5\" fill=\"#fff\" cx=\"25\" cy=\"25\" r=\"25\" />\r\n                    <motion.path\r\n                        className=\"cView\"\r\n                        fill=\"#fff\"\r\n                        d=\"M50,25c-14.33,0-25,0-25,0s0-7,0-25C38.81,0,50,11.19,50,25z\"\r\n                        initial={{ rotate: -90 }}\r\n                        animate={{ rotate: 0 }}\r\n                        transition={{ duration: 1, ease: \"linear\" }}\r\n                        style={{ transformOrigin: \"0 100%\" }}\r\n                    />\r\n                    <circle fill=\"#fff\" cx=\"25\" cy=\"25\" r=\"4.67\" />\r\n                </svg>\r\n            </motion.div>\r\n        </div>\r\n\t);\r\n};\r\n\r\nexport default BgOcean;\r\n",
      "path": "components/pumki-ui/backgrounds/bg-ocean.tsx",
      "target": "components/pumki-ui/backgrounds/bg-ocean.tsx"
    }
  ]
}