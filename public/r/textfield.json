{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "textfield",
  "type": "registry:ui",
  "title": "Text Field",
  "description": "A component for showing and hiding content.",
  "author": "Ansh Singh Sonkhia",
  "dependencies": [
    "react",
    "react-aria-components",
    "class-variance-authority"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:ui",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport {\r\n  Input as AriaInput,\r\n  InputProps as AriaInputProps,\r\n  TextArea as AriaTextArea,\r\n  TextAreaProps as AriaTextAreaProps,\r\n  TextField as AriaTextField,\r\n  TextFieldProps as AriaTextFieldProps,\r\n  ValidationResult as AriaValidationResult,\r\n  composeRenderProps,\r\n  Text,\r\n} from \"react-aria-components\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nimport {\r\n  FieldError as AriaFieldError,\r\n  FieldErrorProps as AriaFieldErrorProps,\r\n  Label as AriaLabel,\r\n  LabelProps as AriaLabelProps,\r\n  Text as AriaText,\r\n  TextProps as AriaTextProps,\r\n} from \"react-aria-components\"\r\n\r\nimport { cva } from \"class-variance-authority\"\r\n\r\n\r\n\r\nconst labelVariants = cva([\r\n  \"text-sm font-medium leading-none\",\r\n  /* Disabled */\r\n  \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-70\",\r\n  /* Invalid */\r\n  \"group-data-[invalid]:text-destructive\",\r\n])\r\n\r\nconst fieldGroupVariants = cva(\"\", {\r\n  variants: {\r\n    variant: {\r\n      default: [\r\n        \"relative flex h-10 w-full items-center overflow-hidden rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background\",\r\n        /* Focus Within */\r\n        \"data-[focus-within]:outline-none data-[focus-within]:ring-2 data-[focus-within]:ring-ring data-[focus-within]:ring-offset-2\",\r\n        /* Disabled */\r\n        \"data-[disabled]:opacity-50\",\r\n      ],\r\n      ghost: \"\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n})\r\n\r\nimport { Group as AriaGroup, GroupProps as AriaGroupProps } from \"react-aria-components\"\r\nimport { type VariantProps } from \"class-variance-authority\"\r\n\r\ninterface FieldGroupProps extends AriaGroupProps, VariantProps<typeof fieldGroupVariants> {}\r\n\r\nfunction FieldGroup({ className, variant, ...props }: FieldGroupProps) {\r\n  return (\r\n    <AriaGroup\r\n      className={composeRenderProps(className, (className) =>\r\n        cn(fieldGroupVariants({ variant }), className)\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction FormDescription({ className, ...props }: AriaTextProps) {\r\n  return (\r\n    <AriaText\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n      slot=\"description\"\r\n    />\r\n  )\r\n}\r\n\r\nconst Label = ({ className, ...props }: AriaLabelProps) => (\r\n  <AriaLabel className={cn(labelVariants(), className)} {...props} />\r\n)\r\n\r\nfunction FieldError({ className, ...props }: AriaFieldErrorProps) {\r\n  return (\r\n    <AriaFieldError\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nconst TextField = AriaTextField\r\n\r\nconst Input = ({ className, ...props }: AriaInputProps) => {\r\n  return (\r\n    <AriaInput\r\n      className={composeRenderProps(className, (className) =>\r\n        cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground\",\r\n          /* Disabled */\r\n          \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50\",\r\n          /* Focused */\r\n          \"data-[focused]:outline-none data-[focused]:ring-2 data-[focused]:ring-ring data-[focused]:ring-offset-2\",\r\n          /* Resets */\r\n          \"focus-visible:outline-none\",\r\n          className\r\n        )\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nconst TextArea = ({ className, ...props }: AriaTextAreaProps) => {\r\n  return (\r\n    <AriaTextArea\r\n      className={composeRenderProps(className, (className) =>\r\n        cn(\r\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground\",\r\n          /* Focused */\r\n          \"data-[focused]:outline-none data-[focused]:ring-2 data-[focused]:ring-ring data-[focused]:ring-offset-2\",\r\n          /* Disabled */\r\n          \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50\",\r\n          /* Resets */\r\n          \"focus-visible:outline-none\",\r\n          className\r\n        )\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\ninterface JollyTextFieldProps extends AriaTextFieldProps {\r\n  label?: string\r\n  description?: string\r\n  errorMessage?: string | ((validation: AriaValidationResult) => string)\r\n  textArea?: boolean\r\n}\r\n\r\nfunction JollyTextField({\r\n  label,\r\n  description,\r\n  errorMessage,\r\n  textArea,\r\n  className,\r\n  ...props\r\n}: JollyTextFieldProps) {\r\n  return (\r\n    <TextField\r\n      className={composeRenderProps(className, (className) =>\r\n        cn(\"group flex flex-col gap-2\", className)\r\n      )}\r\n      {...props}\r\n    >\r\n      <Label>{label}</Label>\r\n      {textArea ? <TextArea /> : <Input />}\r\n      {description && (\r\n        <Text className=\"text-sm text-muted-foreground\" slot=\"description\">\r\n          {description}\r\n        </Text>\r\n      )}\r\n      <FieldError>{errorMessage}</FieldError>\r\n    </TextField>\r\n  )\r\n}\r\n\r\nexport {\r\n  Input,\r\n  TextField,\r\n  JollyTextField,\r\n  TextArea,\r\n  Label,\r\n  labelVariants,\r\n  FieldGroup,\r\n  fieldGroupVariants,\r\n  FieldError,\r\n  FormDescription,\r\n}\r\nexport type { JollyTextFieldProps }\r\n",
      "path": "components/pumki-ui/form/textfield.tsx",
      "target": "components/pumki-ui/form/textfield.tsx"
    }
  ]
}